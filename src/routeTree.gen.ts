/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as LoginResetPasswordImport } from './routes/_login/reset-password'
import { Route as LoginLoginImport } from './routes/_login/login'
import { Route as LoginForgotPasswordImport } from './routes/_login/forgot-password'
import { Route as AuthenticatedLogoutImport } from './routes/_authenticated/logout'
import { Route as AuthenticatedUsersIndexImport } from './routes/_authenticated/users/index'
import { Route as AuthenticatedSubmissionsIndexImport } from './routes/_authenticated/submissions/index'
import { Route as AuthenticatedStudentsIndexImport } from './routes/_authenticated/students/index'
import { Route as AuthenticatedSettingsIndexImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedProgramsIndexImport } from './routes/_authenticated/programs/index'
import { Route as AuthenticatedOrganizationIndexImport } from './routes/_authenticated/organization/index'
import { Route as AuthenticatedManageCoursesIndexImport } from './routes/_authenticated/manage-courses/index'
import { Route as AuthenticatedBatchesIndexImport } from './routes/_authenticated/batches/index'
import { Route as AuthenticatedAllIndexImport } from './routes/_authenticated/all/index'
import { Route as AuthenticatedUsersAddImport } from './routes/_authenticated/users/add'
import { Route as AuthenticatedUsersUserIdImport } from './routes/_authenticated/users/$userId'
import { Route as AuthenticatedSubmissionsAssignmentIdImport } from './routes/_authenticated/submissions/$assignmentId'
import { Route as AuthenticatedStudentsAddImport } from './routes/_authenticated/students/add'
import { Route as AuthenticatedStudentsStudentIdImport } from './routes/_authenticated/students/$studentId'
import { Route as AuthenticatedSettingsPrivacyPolicyImport } from './routes/_authenticated/settings/privacyPolicy'
import { Route as AuthenticatedSettingsFaqImport } from './routes/_authenticated/settings/faq'
import { Route as AuthenticatedSettingsChangePasswordImport } from './routes/_authenticated/settings/changePassword'
import { Route as AuthenticatedSettingsAdminProfileImport } from './routes/_authenticated/settings/adminProfile'
import { Route as AuthenticatedProgramsAddImport } from './routes/_authenticated/programs/add'
import { Route as AuthenticatedProgramsProgramIdImport } from './routes/_authenticated/programs/$programId'
import { Route as AuthenticatedOrganizationAddImport } from './routes/_authenticated/organization/add'
import { Route as AuthenticatedOrganizationOrganizationIdImport } from './routes/_authenticated/organization/$organizationId'
import { Route as AuthenticatedMySubmissionsImport } from './routes/_authenticated/my/submissions'
import { Route as AuthenticatedManageCoursesAddImport } from './routes/_authenticated/manage-courses/add'
import { Route as AuthenticatedManageCoursesCourseIdImport } from './routes/_authenticated/manage-courses/$courseId'
import { Route as AuthenticatedBatchesManageImport } from './routes/_authenticated/batches/manage'
import { Route as AuthenticatedMyProfileIndexImport } from './routes/_authenticated/my/profile/index'
import { Route as AuthenticatedAllProgramsIndexImport } from './routes/_authenticated/all/programs/index'
import { Route as AuthenticatedAllCoursesIndexImport } from './routes/_authenticated/all/courses/index'
import { Route as AuthenticatedMyProfileEditImport } from './routes/_authenticated/my/profile/edit'
import { Route as AuthenticatedBatchesBatchIdStudentsImport } from './routes/_authenticated/batches/$batchId/students'
import { Route as AuthenticatedAssignmentsAssignmentIdSubmissionIdImport } from './routes/_authenticated/assignments/$assignmentId.$submissionId'
import { Route as AuthenticatedAllProgramsProgramIdImport } from './routes/_authenticated/all/programs/$programId'
import { Route as AuthenticatedAllCoursesCourseIdImport } from './routes/_authenticated/all/courses/$courseId'
import { Route as AuthenticatedMyAssignmentsAssignmentIdSubmissionsImport } from './routes/_authenticated/my/assignments/$assignmentId/submissions'
import { Route as AuthenticatedMyCoursesCourseIdModulesModuleIdSectionsSectionIdReadingMaterialsContentIdImport } from './routes/_authenticated/my/courses/$courseId/modules/$moduleId/sections/$sectionId/reading-materials/$contentId'

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LoginResetPasswordRoute = LoginResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginLoginRoute = LoginLoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LoginForgotPasswordRoute = LoginForgotPasswordImport.update({
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedLogoutRoute = AuthenticatedLogoutImport.update({
  path: '/logout',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexImport.update({
  path: '/users/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSubmissionsIndexRoute =
  AuthenticatedSubmissionsIndexImport.update({
    path: '/submissions/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedStudentsIndexRoute = AuthenticatedStudentsIndexImport.update(
  {
    path: '/students/',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedSettingsIndexRoute = AuthenticatedSettingsIndexImport.update(
  {
    path: '/settings/',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedProgramsIndexRoute = AuthenticatedProgramsIndexImport.update(
  {
    path: '/programs/',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedOrganizationIndexRoute =
  AuthenticatedOrganizationIndexImport.update({
    path: '/organization/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedManageCoursesIndexRoute =
  AuthenticatedManageCoursesIndexImport.update({
    path: '/manage-courses/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedBatchesIndexRoute = AuthenticatedBatchesIndexImport.update({
  path: '/batches/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAllIndexRoute = AuthenticatedAllIndexImport.update({
  path: '/all/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedUsersAddRoute = AuthenticatedUsersAddImport.update({
  path: '/users/add',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedUsersUserIdRoute = AuthenticatedUsersUserIdImport.update({
  path: '/users/$userId',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSubmissionsAssignmentIdRoute =
  AuthenticatedSubmissionsAssignmentIdImport.update({
    path: '/submissions/$assignmentId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedStudentsAddRoute = AuthenticatedStudentsAddImport.update({
  path: '/students/add',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedStudentsStudentIdRoute =
  AuthenticatedStudentsStudentIdImport.update({
    path: '/students/$studentId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedSettingsPrivacyPolicyRoute =
  AuthenticatedSettingsPrivacyPolicyImport.update({
    path: '/settings/privacyPolicy',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedSettingsFaqRoute = AuthenticatedSettingsFaqImport.update({
  path: '/settings/faq',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSettingsChangePasswordRoute =
  AuthenticatedSettingsChangePasswordImport.update({
    path: '/settings/changePassword',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedSettingsAdminProfileRoute =
  AuthenticatedSettingsAdminProfileImport.update({
    path: '/settings/adminProfile',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedProgramsAddRoute = AuthenticatedProgramsAddImport.update({
  path: '/programs/add',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedProgramsProgramIdRoute =
  AuthenticatedProgramsProgramIdImport.update({
    path: '/programs/$programId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedOrganizationAddRoute =
  AuthenticatedOrganizationAddImport.update({
    path: '/organization/add',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedOrganizationOrganizationIdRoute =
  AuthenticatedOrganizationOrganizationIdImport.update({
    path: '/organization/$organizationId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedMySubmissionsRoute = AuthenticatedMySubmissionsImport.update(
  {
    path: '/my/submissions',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedManageCoursesAddRoute =
  AuthenticatedManageCoursesAddImport.update({
    path: '/manage-courses/add',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedManageCoursesCourseIdRoute =
  AuthenticatedManageCoursesCourseIdImport.update({
    path: '/manage-courses/$courseId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedBatchesManageRoute = AuthenticatedBatchesManageImport.update(
  {
    path: '/batches/manage',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedMyProfileIndexRoute =
  AuthenticatedMyProfileIndexImport.update({
    path: '/my/profile/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAllProgramsIndexRoute =
  AuthenticatedAllProgramsIndexImport.update({
    path: '/all/programs/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAllCoursesIndexRoute =
  AuthenticatedAllCoursesIndexImport.update({
    path: '/all/courses/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedMyProfileEditRoute = AuthenticatedMyProfileEditImport.update(
  {
    path: '/my/profile/edit',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedBatchesBatchIdStudentsRoute =
  AuthenticatedBatchesBatchIdStudentsImport.update({
    path: '/batches/$batchId/students',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAssignmentsAssignmentIdSubmissionIdRoute =
  AuthenticatedAssignmentsAssignmentIdSubmissionIdImport.update({
    path: '/assignments/$assignmentId/$submissionId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAllProgramsProgramIdRoute =
  AuthenticatedAllProgramsProgramIdImport.update({
    path: '/all/programs/$programId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAllCoursesCourseIdRoute =
  AuthenticatedAllCoursesCourseIdImport.update({
    path: '/all/courses/$courseId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedMyAssignmentsAssignmentIdSubmissionsRoute =
  AuthenticatedMyAssignmentsAssignmentIdSubmissionsImport.update({
    path: '/my/assignments/$assignmentId/submissions',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedMyCoursesCourseIdModulesModuleIdSectionsSectionIdReadingMaterialsContentIdRoute =
  AuthenticatedMyCoursesCourseIdModulesModuleIdSectionsSectionIdReadingMaterialsContentIdImport.update(
    {
      path: '/my/courses/$courseId/modules/$moduleId/sections/$sectionId/reading-materials/$contentId',
      getParentRoute: () => AuthenticatedRoute,
    } as any,
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/logout': {
      id: '/_authenticated/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof AuthenticatedLogoutImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_login/forgot-password': {
      id: '/_login/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof LoginForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/_login/login': {
      id: '/_login/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLoginImport
      parentRoute: typeof rootRoute
    }
    '/_login/reset-password': {
      id: '/_login/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof LoginResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/batches/manage': {
      id: '/_authenticated/batches/manage'
      path: '/batches/manage'
      fullPath: '/batches/manage'
      preLoaderRoute: typeof AuthenticatedBatchesManageImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/manage-courses/$courseId': {
      id: '/_authenticated/manage-courses/$courseId'
      path: '/manage-courses/$courseId'
      fullPath: '/manage-courses/$courseId'
      preLoaderRoute: typeof AuthenticatedManageCoursesCourseIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/manage-courses/add': {
      id: '/_authenticated/manage-courses/add'
      path: '/manage-courses/add'
      fullPath: '/manage-courses/add'
      preLoaderRoute: typeof AuthenticatedManageCoursesAddImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/my/submissions': {
      id: '/_authenticated/my/submissions'
      path: '/my/submissions'
      fullPath: '/my/submissions'
      preLoaderRoute: typeof AuthenticatedMySubmissionsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/organization/$organizationId': {
      id: '/_authenticated/organization/$organizationId'
      path: '/organization/$organizationId'
      fullPath: '/organization/$organizationId'
      preLoaderRoute: typeof AuthenticatedOrganizationOrganizationIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/organization/add': {
      id: '/_authenticated/organization/add'
      path: '/organization/add'
      fullPath: '/organization/add'
      preLoaderRoute: typeof AuthenticatedOrganizationAddImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/programs/$programId': {
      id: '/_authenticated/programs/$programId'
      path: '/programs/$programId'
      fullPath: '/programs/$programId'
      preLoaderRoute: typeof AuthenticatedProgramsProgramIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/programs/add': {
      id: '/_authenticated/programs/add'
      path: '/programs/add'
      fullPath: '/programs/add'
      preLoaderRoute: typeof AuthenticatedProgramsAddImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings/adminProfile': {
      id: '/_authenticated/settings/adminProfile'
      path: '/settings/adminProfile'
      fullPath: '/settings/adminProfile'
      preLoaderRoute: typeof AuthenticatedSettingsAdminProfileImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings/changePassword': {
      id: '/_authenticated/settings/changePassword'
      path: '/settings/changePassword'
      fullPath: '/settings/changePassword'
      preLoaderRoute: typeof AuthenticatedSettingsChangePasswordImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings/faq': {
      id: '/_authenticated/settings/faq'
      path: '/settings/faq'
      fullPath: '/settings/faq'
      preLoaderRoute: typeof AuthenticatedSettingsFaqImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings/privacyPolicy': {
      id: '/_authenticated/settings/privacyPolicy'
      path: '/settings/privacyPolicy'
      fullPath: '/settings/privacyPolicy'
      preLoaderRoute: typeof AuthenticatedSettingsPrivacyPolicyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/students/$studentId': {
      id: '/_authenticated/students/$studentId'
      path: '/students/$studentId'
      fullPath: '/students/$studentId'
      preLoaderRoute: typeof AuthenticatedStudentsStudentIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/students/add': {
      id: '/_authenticated/students/add'
      path: '/students/add'
      fullPath: '/students/add'
      preLoaderRoute: typeof AuthenticatedStudentsAddImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/submissions/$assignmentId': {
      id: '/_authenticated/submissions/$assignmentId'
      path: '/submissions/$assignmentId'
      fullPath: '/submissions/$assignmentId'
      preLoaderRoute: typeof AuthenticatedSubmissionsAssignmentIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/users/$userId': {
      id: '/_authenticated/users/$userId'
      path: '/users/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof AuthenticatedUsersUserIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/users/add': {
      id: '/_authenticated/users/add'
      path: '/users/add'
      fullPath: '/users/add'
      preLoaderRoute: typeof AuthenticatedUsersAddImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/all/': {
      id: '/_authenticated/all/'
      path: '/all'
      fullPath: '/all'
      preLoaderRoute: typeof AuthenticatedAllIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/batches/': {
      id: '/_authenticated/batches/'
      path: '/batches'
      fullPath: '/batches'
      preLoaderRoute: typeof AuthenticatedBatchesIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/manage-courses/': {
      id: '/_authenticated/manage-courses/'
      path: '/manage-courses'
      fullPath: '/manage-courses'
      preLoaderRoute: typeof AuthenticatedManageCoursesIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/organization/': {
      id: '/_authenticated/organization/'
      path: '/organization'
      fullPath: '/organization'
      preLoaderRoute: typeof AuthenticatedOrganizationIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/programs/': {
      id: '/_authenticated/programs/'
      path: '/programs'
      fullPath: '/programs'
      preLoaderRoute: typeof AuthenticatedProgramsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/students/': {
      id: '/_authenticated/students/'
      path: '/students'
      fullPath: '/students'
      preLoaderRoute: typeof AuthenticatedStudentsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/submissions/': {
      id: '/_authenticated/submissions/'
      path: '/submissions'
      fullPath: '/submissions'
      preLoaderRoute: typeof AuthenticatedSubmissionsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/all/courses/$courseId': {
      id: '/_authenticated/all/courses/$courseId'
      path: '/all/courses/$courseId'
      fullPath: '/all/courses/$courseId'
      preLoaderRoute: typeof AuthenticatedAllCoursesCourseIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/all/programs/$programId': {
      id: '/_authenticated/all/programs/$programId'
      path: '/all/programs/$programId'
      fullPath: '/all/programs/$programId'
      preLoaderRoute: typeof AuthenticatedAllProgramsProgramIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/assignments/$assignmentId/$submissionId': {
      id: '/_authenticated/assignments/$assignmentId/$submissionId'
      path: '/assignments/$assignmentId/$submissionId'
      fullPath: '/assignments/$assignmentId/$submissionId'
      preLoaderRoute: typeof AuthenticatedAssignmentsAssignmentIdSubmissionIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/batches/$batchId/students': {
      id: '/_authenticated/batches/$batchId/students'
      path: '/batches/$batchId/students'
      fullPath: '/batches/$batchId/students'
      preLoaderRoute: typeof AuthenticatedBatchesBatchIdStudentsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/my/profile/edit': {
      id: '/_authenticated/my/profile/edit'
      path: '/my/profile/edit'
      fullPath: '/my/profile/edit'
      preLoaderRoute: typeof AuthenticatedMyProfileEditImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/all/courses/': {
      id: '/_authenticated/all/courses/'
      path: '/all/courses'
      fullPath: '/all/courses'
      preLoaderRoute: typeof AuthenticatedAllCoursesIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/all/programs/': {
      id: '/_authenticated/all/programs/'
      path: '/all/programs'
      fullPath: '/all/programs'
      preLoaderRoute: typeof AuthenticatedAllProgramsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/my/profile/': {
      id: '/_authenticated/my/profile/'
      path: '/my/profile'
      fullPath: '/my/profile'
      preLoaderRoute: typeof AuthenticatedMyProfileIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/my/assignments/$assignmentId/submissions': {
      id: '/_authenticated/my/assignments/$assignmentId/submissions'
      path: '/my/assignments/$assignmentId/submissions'
      fullPath: '/my/assignments/$assignmentId/submissions'
      preLoaderRoute: typeof AuthenticatedMyAssignmentsAssignmentIdSubmissionsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/my/courses/$courseId/modules/$moduleId/sections/$sectionId/reading-materials/$contentId': {
      id: '/_authenticated/my/courses/$courseId/modules/$moduleId/sections/$sectionId/reading-materials/$contentId'
      path: '/my/courses/$courseId/modules/$moduleId/sections/$sectionId/reading-materials/$contentId'
      fullPath: '/my/courses/$courseId/modules/$moduleId/sections/$sectionId/reading-materials/$contentId'
      preLoaderRoute: typeof AuthenticatedMyCoursesCourseIdModulesModuleIdSectionsSectionIdReadingMaterialsContentIdImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedLogoutRoute,
    AuthenticatedBatchesManageRoute,
    AuthenticatedManageCoursesCourseIdRoute,
    AuthenticatedManageCoursesAddRoute,
    AuthenticatedMySubmissionsRoute,
    AuthenticatedOrganizationOrganizationIdRoute,
    AuthenticatedOrganizationAddRoute,
    AuthenticatedProgramsProgramIdRoute,
    AuthenticatedProgramsAddRoute,
    AuthenticatedSettingsAdminProfileRoute,
    AuthenticatedSettingsChangePasswordRoute,
    AuthenticatedSettingsFaqRoute,
    AuthenticatedSettingsPrivacyPolicyRoute,
    AuthenticatedStudentsStudentIdRoute,
    AuthenticatedStudentsAddRoute,
    AuthenticatedSubmissionsAssignmentIdRoute,
    AuthenticatedUsersUserIdRoute,
    AuthenticatedUsersAddRoute,
    AuthenticatedAllIndexRoute,
    AuthenticatedBatchesIndexRoute,
    AuthenticatedManageCoursesIndexRoute,
    AuthenticatedOrganizationIndexRoute,
    AuthenticatedProgramsIndexRoute,
    AuthenticatedSettingsIndexRoute,
    AuthenticatedStudentsIndexRoute,
    AuthenticatedSubmissionsIndexRoute,
    AuthenticatedUsersIndexRoute,
    AuthenticatedAllCoursesCourseIdRoute,
    AuthenticatedAllProgramsProgramIdRoute,
    AuthenticatedAssignmentsAssignmentIdSubmissionIdRoute,
    AuthenticatedBatchesBatchIdStudentsRoute,
    AuthenticatedMyProfileEditRoute,
    AuthenticatedAllCoursesIndexRoute,
    AuthenticatedAllProgramsIndexRoute,
    AuthenticatedMyProfileIndexRoute,
    AuthenticatedMyAssignmentsAssignmentIdSubmissionsRoute,
    AuthenticatedMyCoursesCourseIdModulesModuleIdSectionsSectionIdReadingMaterialsContentIdRoute,
  }),
  LoginForgotPasswordRoute,
  LoginLoginRoute,
  LoginResetPasswordRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/_login/forgot-password",
        "/_login/login",
        "/_login/reset-password"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/logout",
        "/_authenticated/batches/manage",
        "/_authenticated/manage-courses/$courseId",
        "/_authenticated/manage-courses/add",
        "/_authenticated/my/submissions",
        "/_authenticated/organization/$organizationId",
        "/_authenticated/organization/add",
        "/_authenticated/programs/$programId",
        "/_authenticated/programs/add",
        "/_authenticated/settings/adminProfile",
        "/_authenticated/settings/changePassword",
        "/_authenticated/settings/faq",
        "/_authenticated/settings/privacyPolicy",
        "/_authenticated/students/$studentId",
        "/_authenticated/students/add",
        "/_authenticated/submissions/$assignmentId",
        "/_authenticated/users/$userId",
        "/_authenticated/users/add",
        "/_authenticated/all/",
        "/_authenticated/batches/",
        "/_authenticated/manage-courses/",
        "/_authenticated/organization/",
        "/_authenticated/programs/",
        "/_authenticated/settings/",
        "/_authenticated/students/",
        "/_authenticated/submissions/",
        "/_authenticated/users/",
        "/_authenticated/all/courses/$courseId",
        "/_authenticated/all/programs/$programId",
        "/_authenticated/assignments/$assignmentId/$submissionId",
        "/_authenticated/batches/$batchId/students",
        "/_authenticated/my/profile/edit",
        "/_authenticated/all/courses/",
        "/_authenticated/all/programs/",
        "/_authenticated/my/profile/",
        "/_authenticated/my/assignments/$assignmentId/submissions",
        "/_authenticated/my/courses/$courseId/modules/$moduleId/sections/$sectionId/reading-materials/$contentId"
      ]
    },
    "/_authenticated/logout": {
      "filePath": "_authenticated/logout.tsx",
      "parent": "/_authenticated"
    },
    "/_login/forgot-password": {
      "filePath": "_login/forgot-password.tsx"
    },
    "/_login/login": {
      "filePath": "_login/login.tsx"
    },
    "/_login/reset-password": {
      "filePath": "_login/reset-password.tsx"
    },
    "/_authenticated/batches/manage": {
      "filePath": "_authenticated/batches/manage.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/manage-courses/$courseId": {
      "filePath": "_authenticated/manage-courses/$courseId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/manage-courses/add": {
      "filePath": "_authenticated/manage-courses/add.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/my/submissions": {
      "filePath": "_authenticated/my/submissions.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/organization/$organizationId": {
      "filePath": "_authenticated/organization/$organizationId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/organization/add": {
      "filePath": "_authenticated/organization/add.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/programs/$programId": {
      "filePath": "_authenticated/programs/$programId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/programs/add": {
      "filePath": "_authenticated/programs/add.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/adminProfile": {
      "filePath": "_authenticated/settings/adminProfile.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/changePassword": {
      "filePath": "_authenticated/settings/changePassword.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/faq": {
      "filePath": "_authenticated/settings/faq.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/privacyPolicy": {
      "filePath": "_authenticated/settings/privacyPolicy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/students/$studentId": {
      "filePath": "_authenticated/students/$studentId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/students/add": {
      "filePath": "_authenticated/students/add.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/submissions/$assignmentId": {
      "filePath": "_authenticated/submissions/$assignmentId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/$userId": {
      "filePath": "_authenticated/users/$userId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/add": {
      "filePath": "_authenticated/users/add.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/all/": {
      "filePath": "_authenticated/all/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/batches/": {
      "filePath": "_authenticated/batches/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/manage-courses/": {
      "filePath": "_authenticated/manage-courses/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/organization/": {
      "filePath": "_authenticated/organization/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/programs/": {
      "filePath": "_authenticated/programs/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/students/": {
      "filePath": "_authenticated/students/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/submissions/": {
      "filePath": "_authenticated/submissions/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/": {
      "filePath": "_authenticated/users/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/all/courses/$courseId": {
      "filePath": "_authenticated/all/courses/$courseId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/all/programs/$programId": {
      "filePath": "_authenticated/all/programs/$programId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/assignments/$assignmentId/$submissionId": {
      "filePath": "_authenticated/assignments/$assignmentId.$submissionId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/batches/$batchId/students": {
      "filePath": "_authenticated/batches/$batchId/students.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/my/profile/edit": {
      "filePath": "_authenticated/my/profile/edit.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/all/courses/": {
      "filePath": "_authenticated/all/courses/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/all/programs/": {
      "filePath": "_authenticated/all/programs/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/my/profile/": {
      "filePath": "_authenticated/my/profile/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/my/assignments/$assignmentId/submissions": {
      "filePath": "_authenticated/my/assignments/$assignmentId/submissions.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/my/courses/$courseId/modules/$moduleId/sections/$sectionId/reading-materials/$contentId": {
      "filePath": "_authenticated/my/courses/$courseId/modules/$moduleId/sections/$sectionId/reading-materials/$contentId.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
